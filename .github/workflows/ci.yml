name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB_NAME }}
        ports:
          - 5432:5432

      mysql:
        image: mysql:latest
        env:
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
    steps:
    - uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.8.0
      with:
        components: llvm-tools-preview

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@v2.33.22
      with:
        tool: cargo-llvm-cov

    - name: Install SQLx CLI
      run: cargo install sqlx-cli --no-default-features --features postgres,mysql,sqlite

    - name: Run migrations for Postgres
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.PG_DB_PORT }}/${{ secrets.DB_NAME }}
      run: sqlx migrate run --source page-hunter/tests/migrations/postgres

    - name: Run migrations for MySQL
      env:
        DATABASE_URL: mysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.MYSQL_DB_PORT }}/${{ secrets.DB_NAME }}
      run: sqlx migrate run --source page-hunter/tests/migrations/mysql

    - name: Check project
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --all-features

    - name: Check formatting
      run: cargo fmt --all --check

    - name: Run tests with coverage for all features
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOST: ${{ secrets.DB_HOST }}
        PG_DB_PORT: ${{ secrets.PG_DB_PORT }}
        MYSQL_DB_PORT: ${{ secrets.MYSQL_DB_PORT }}
      run: cargo llvm-cov --workspace --all-features --codecov --output-path codecov.json

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4.3.1
      with:
        files: codecov.json
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
