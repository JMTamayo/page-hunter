name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 5 * * 0"

env:
  CARGO_TERM_COLOR: always

jobs:
  Format:
    runs-on: ubuntu-24.04

    steps:
      - name: "Repository: Fetch"
        uses: actions/checkout@v4

      - name: "Setup: Install Rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - name: "Step: Check Format"
        run: cargo fmt --package page-hunter --all --check

  Lints:
    runs-on: ubuntu-24.04
    needs: Format
    strategy:
      matrix:
        feature:
          - serde
          - utoipa
          - sqlx
          - all

    steps:
      - name: "Repository: Fetch"
        uses: actions/checkout@v4

      - name: "Setup: Install Rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy

      - name: "Step: Lints"
        run: |
          if [[ ${{ matrix.feature }} == all ]]; then
            cargo clippy --package page-hunter --all-features
          else
            cargo clippy --package page-hunter --features ${{ matrix.feature }}
          fi

  Build:
    runs-on: ubuntu-24.04
    needs: Lints
    strategy:
      matrix:
        feature:
          - serde
          - utoipa
          - sqlx
          - all

    steps:
      - name: "Repository: Fetch"
        uses: actions/checkout@v4

      - name: "Setup: Install Rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: "Step: Build"
        run: |
          if [[ ${{ matrix.feature }} == all ]]; then
            cargo build --package page-hunter --all-features
          else
            cargo build --package page-hunter --features ${{ matrix.feature }}
          fi

  Docs:
    runs-on: ubuntu-24.04
    needs: Build

    steps:
      - name: "Repository: Fetch"
        uses: actions/checkout@v4

      - name: "Setup: Install Rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: "Step: Build Doc"
        run: cargo doc --package page-hunter --all-features --document-private-items --verbose

  Tests:
    runs-on: ubuntu-24.04
    needs: Docs

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432

    steps:
      - name: "Repository: Fetch"
        uses: actions/checkout@v4

      - name: "Setup: Install Rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: llvm-tools-preview,cargo-nextest

      - name: "Setup: Install SQLx Cli"
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: "Setup: Postgres Database Migrations"
        env:
          MIGRATIONS_PATH: page-hunter/src/pagination/sqlx/tests/pg/migrations
          DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.PG_DB_PORT }}/${{ secrets.DB_NAME }}
        run: sqlx migrate run --source ${{ env.MIGRATIONS_PATH }}

      - name: "Step: Doc Tests"
        run: cargo test --package page-hunter --all-features --doc

      - name: "Step: Unit & Integration Tests"
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          PG_DB_PORT: ${{ secrets.PG_DB_PORT }}
        run: cargo llvm-cov --package page-hunter --all-features --codecov --output-path codecov.json

      - name: "Step: Publish Results"
        uses: codecov/codecov-action@v4
        with:
          files: codecov.json
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  Security:
    runs-on: ubuntu-24.04
    needs: Tests

    steps:
      - name: "Repository: Fetch"
        uses: actions/checkout@v4

      - name: "Step: Security Analysis"
        uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check
          log-level: warn
          manifest-path: ./page-hunter/Cargo.toml
          arguments: --all-features
